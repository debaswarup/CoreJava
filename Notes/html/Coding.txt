
Find loops in a linklist

http://www.geeksforgeeks.org/detect-and-remove-loop-in-a-linked-list/

======================================================================

http://www.geeksforgeeks.org/reverse-words-in-a-given-string/
can use stack
Reverse characters in a String

===============================================================================
http://www.geeksforgeeks.org/given-an-array-of-numbers-arrange-the-numbers-to-form-the-biggest-number/

=============================================================================
How to remove duplicate elements from an array efficiently?
http://stackoverflow.com/questions/17967114/how-to-efficiently-remove-duplicates-from-an-array-without-using-set

int[] input = new int[]{1, 1, 3, 7, 7, 8, 9, 9, 9, 10};
int current = input[0];
boolean found = false;

for (int i = 0; i < input.length; i++) {
    if (current == input[i] && !found) {
        found = true;
    } else if (current != input[i]) {
        System.out.print(" " + current);
        current = input[i];
        found = false;
    }
}
System.out.print(" " + current);

------------------

public static void main(String[] args) throws Exception {
    final int[] original = new int[]{1, 1, 2, 8, 9, 8, 4, 7, 4, 9, 1, 1000, 1000};
    System.out.println(Arrays.toString(original));
    final int[] buckets = new int[1001];
    for (final int i : original) {
        buckets[i]++;
    }
    final int[] unique = new int[original.length];
    int count = 0;
    for (int i = 0; i < buckets.length; ++i) {
        if (buckets[i] > 0) {
            unique[count++] = i;
        }
    }
    final int[] compressed = new int[count];
    System.arraycopy(unique, 0, compressed, 0, count);
    System.out.println(Arrays.toString(compressed));
}


=====================================================================================================

How to reverse a linklist using recurssion
NodePtr reverseList(NodePtr curr) {
    if (curr == NULL || curr->next == NULL) return curr; // empty or single element case

    NodePtr nextElement = curr->next;
    curr->next = NULL;
    NodePtr head = reverseList(nextElement);
    nextElement->next = curr;
    return head;
}

===================================================================================================

Find n level connections for a node of a linklist
longest subsequence
first non repeat char in string
http://www.geeksforgeeks.org/given-a-string-find-its-first-non-repeating-character/

=======================================================================================

how to find size of a java object

http://www.geeksforgeeks.org/write-a-function-to-reverse-the-nodes-of-a-linked-list/

mycodeschool.com

https://www.youtube.com/watch?v=hNP72JdOIgY

=========================================================================================

http://javarevisited.blogspot.in/2016/08/inorder-traversal-of-binary-tree-in-java-recursion-iteration-example.html

private void inOrder(TreeNode node) {
    if (node == null) {
      return;
    }

    inOrder(node.left);
    System.out.printf("%s ", node.data);
    inOrder(node.right);
  }



public void inOrderWithoutRecursion() {
    Stack nodes = new Stack<>();
    TreeNode current = root;

    while (!nodes.isEmpty() || current != null) {

      if (current != null) {
        nodes.push(current);
        current = current.left;
      } else {
        TreeNode node = nodes.pop();
        System.out.printf("%s ", node.data);
        current = node.right;
      }

    }
  }

===========================================================================================================

https://www.geeksforgeeks.org/top-25-interview-questions/
https://www.geeksforgeeks.org/10-important-interview-questions/
https://www.geeksforgeeks.org/walmart-labs-interview-experience/

list qsn
largest contiguous subarray https://www.geeksforgeeks.org/?p=576
https://www.geeksforgeeks.org/maximum-product-subarray/
https://www.geeksforgeeks.org/maximum-sum-such-that-no-two-elements-are-adjacent/
https://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/
https://www.javatpoint.com/cpp-vs-java

http://www.geeksforgeeks.org/find-k-th-smallest-element-in-bst-order-statistics-in-bst/
http://www.geeksforgeeks.org/run-length-encoding/
http://www.geeksforgeeks.org/count-substrings-with-same-first-and-last-characters/
http://www.geeksforgeeks.org/level-order-tree-traversal/
http://www.geeksforgeeks.org/level-order-traversal-in-spiral-form/

http://stackoverflow.com/questions/685060/design-a-stack-such-that-getminimum-should-be-o1
draw tree from inorder and preorder
http://www.geeksforgeeks.org/construct-tree-from-given-inorder-and-preorder-traversal/
http://stackoverflow.com/questions/12880718/how-many-traversals-need-to-be-known-to-construct-a-bst
seriaize a binary tree
http://www.geeksforgeeks.org/serialize-deserialize-binary-tree/


http://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/

http://stackoverflow.com/questions/3435926/insert-delete-max-in-o1
http://www.geeksforgeeks.org/design-a-stack-that-supports-getmin-in-o1-time-and-o1-extra-space/

http://stackoverflow.com/questions/685060/design-a-stack-such-that-getminimum-should-be-o1

======================================================================================================================
1. Design Conference Room Allocation system considering the time and number of rooms available constraints.
https://stackoverflow.com/questions/33035213/room-booking-program

2. Design Snake and Ladder game
https://www.careercup.com/question?id=9605945

========================================================================================================

http://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/
http://javabypatel.blogspot.in/2015/10/check-strings-are-anagrams.html
https://www.quora.com/How-we-can-check-whether-two-given-strings-are-anagrams-using-a-HashMap-in-Java

Show timing problem

Min element stack:
https://www.careercup.com/question?id=14462745


https://stackoverflow.com/questions/4240080/generating-all-permutations-of-a-given-string
https://introcs.cs.princeton.edu/java/23recursion/Permutations.java.html
http://www.geeksforgeeks.org/permutations-of-a-given-string-using-stl/

===================================================================================

https://www.geeksforgeeks.org/dynamic-programming/

==========================================================
VOting problem:
https://github.com/spdeepak/hackerrank/tree/master/src/main/java/com/deepaksp/hackerrank/interview/hacklandelection

====================================================================

https://www.geeksforgeeks.org/goldman-sachs-interview-experience-set-37-experienced/